name: Run Root Script  # 定义工作流的名称

on:
  push:  # 当代码推送到指定分支时触发工作流
    branches:
      - master  # 监视 main 分支的变化
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  run-script:
    runs-on: ubuntu-latest  # 使用Ubuntu环境来运行工作流，但连接到CentOS服务器

    steps:
    - name: Checkout code  # 步骤1：检出代码
      uses: actions/checkout@v2  # 使用官方的actions/checkout@v2动作，从仓库中检出代码

    - name: Install SSH client and sshpass  # 步骤2：安装 SSH 客户端和 sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client sshpass  # 在Ubuntu环境中安装openssh-client和sshpass

    - name: Run script on server  # 步骤3：在服务器上运行脚本
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}  # 从 GitHub Secrets 中读取 SSH 主机名
        SSH_USER: ${{ secrets.SSH_USER }}  # 从 GitHub Secrets 中读取 SSH 用户名
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}  # 从 GitHub Secrets 中读取 SSH 密码
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST './up.sh'
        # 使用 sshpass 提供密码，并通过 SSH 连接到服务器运行 /root/your_script.sh 脚本
        # sshpass -p "$SSH_PASSWORD": 使用 sshpass 工具自动输入 SSH 密码
        # ssh -o StrictHostKeyChecking=no: 禁用 SSH 主机密钥检查
        # $SSH_USER@$SSH_HOST: 使用提供的用户名和主机名连接到服务器
        # 'sudo /root/your_script.sh': 在连接的服务器上以 root 权限运行脚本