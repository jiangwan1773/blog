import{_ as e,H as t,G as i,al as s}from"./chunks/framework.Dt0boiFn.js";const b=JSON.parse('{"title":"怎么写博客","description":"搭建个人博客教程","frontmatter":{"title":"怎么写博客","description":"搭建个人博客教程","outline":[2,4]},"headers":[],"relativePath":"other/blog/basics/write.md","filePath":"other/blog/basics/write.md","lastUpdated":1719509672000}'),l={name:"other/blog/basics/write.md"},a=s(`<h1 id="怎么写博客" tabindex="-1">怎么写博客 <a class="header-anchor" href="#怎么写博客" aria-label="Permalink to &quot;怎么写博客&quot;">​</a></h1><h2 id="个人经验" tabindex="-1">个人经验 <a class="header-anchor" href="#个人经验" aria-label="Permalink to &quot;个人经验&quot;">​</a></h2><ul><li>一口吃不成一个胖子。第一次写建议想什么写什么，等写的多了再进行 <code>整合规划</code></li><li><code>收费项目</code> 建议用便宜实惠的产品，等博客质量积累起来再去适当 <code>氪金升级</code></li><li>博客是一个不断积累的过程，可以借鉴其他，但不建议完全照搬，要有自己的想法</li><li>可以多参考其他 <code>开源博客</code> 的内容。<a href="https://github.com/foru17/front-end-collect?tab=readme-ov-file" target="_blank" rel="noreferrer">优质博客集   🚘</a></li></ul><h4 id="我的博客大概费用" tabindex="-1">我的博客大概费用 <a class="header-anchor" href="#我的博客大概费用" aria-label="Permalink to &quot;我的博客大概费用&quot;">​</a></h4><blockquote><p>如果不想花钱可以使用 <a href="/other/blog/up/usePage.html"><code>github pages</code></a></p></blockquote><table tabindex="0"><thead><tr><th style="text-align:left;">项目</th><th style="text-align:left;">必要</th><th style="text-align:left;">费用</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">云服务器</td><td style="text-align:left;">必要</td><td style="text-align:left;"><code>100-260</code>不等/年</td><td style="text-align:left;">建议博客写的适量再去购买，而不是什么都没写就先买服务器，<code>千里之行始于足下</code></td></tr><tr><td style="text-align:left;">域名</td><td style="text-align:left;">必要</td><td style="text-align:left;"><code>50</code>左右/年</td><td style="text-align:left;">---</td></tr><tr><td style="text-align:left;">ssl证书</td><td style="text-align:left;">非必需</td><td style="text-align:left;"><code>100</code>左右/3年</td><td style="text-align:left;">建议买便宜的就行，也可以不停的用免费适用3个月的，到期继续申请免费试用3个月</td></tr></tbody></table><h2 id="常见博客框架" tabindex="-1">常见博客框架 <a class="header-anchor" href="#常见博客框架" aria-label="Permalink to &quot;常见博客框架&quot;">​</a></h2><ul><li><code>vitepress</code><blockquote><p>由 Vite 和 Vue 驱动的静态站点生成器</p></blockquote></li><li><code>WordPress</code><blockquote><p>最流行的博客框架，功能丰富、插件众多，适合各种类型的博客。</p></blockquote></li><li><code>Ghost</code><blockquote><p>轻量级博客框架，注重写作体验，适合个人博客。</p></blockquote></li><li><code>Jekyll</code><blockquote><p>静态博客框架，速度快、易于部署，适合技术博客。</p></blockquote></li><li><code>Hexo</code><blockquote><p>基于 Node.js 的静态博客框架，易于使用，适合个人博客和技术博客。</p></blockquote></li><li><code>Hugo</code><blockquote><p>基于 Go 语言的静态博客框架，速度快、功能强大，适合各种类型的博客。</p></blockquote></li></ul><h2 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">​</a></h2><blockquote><p>这里我们选择 <code>vue</code> 团队出品的 <code>vitepress</code></p></blockquote><p><a href="https://vitepress.dev/zh/" target="_blank" rel="noreferrer">官网直通车   🚘</a></p><h4 id="需要了解什么" tabindex="-1">需要了解什么？ <a class="header-anchor" href="#需要了解什么" aria-label="Permalink to &quot;需要了解什么？&quot;">​</a></h4><blockquote><p>vitepress采用md为主要书写语言，vue语言多为辅助</p></blockquote><ol><li><code>Markdown</code> 语法 <ul><li><code>markdown</code> 程序员的必修课</li><li>轻量级标记语言，极易上手</li><li>适用所有开发者，代码托管平台 <code>README.md</code> 文件语言</li><li><a href="https://docs.github.com/zh/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/quickstart-for-writing-on-github" target="_blank" rel="noreferrer">官方教程   🚘</a>  或 自行访问<a href="https://docs.github.com/zh" target="_blank" rel="noreferrer">GitHub 文档</a> 选择 &quot;入门&quot; &gt; &quot;在 GitHub 上写入&quot;</li><li>md教程推荐 <a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noreferrer">菜鸟教程   🚘</a></li></ul></li><li><code>Vue</code> 语法 <ul><li><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">vue官网   🚘</a></li></ul></li><li><code>Node</code> 环境 <ul><li>vitepress是一个前端框架，需要node环境</li></ul></li></ol><h4 id="本地开发需要的环境" tabindex="-1">本地开发需要的环境 <a class="header-anchor" href="#本地开发需要的环境" aria-label="Permalink to &quot;本地开发需要的环境&quot;">​</a></h4><ul><li><code>Node.js</code> 18 及以上版本。</li><li>支持 <code>Markdown</code> 语法的编辑器，推荐 <code>Vscode</code></li></ul><h4 id="进入开发" tabindex="-1">进入开发 <a class="header-anchor" href="#进入开发" aria-label="Permalink to &quot;进入开发&quot;">​</a></h4><blockquote><p><code>vitepress</code> 官网有详细的操作流程和初始化模版，直接参考官网</p></blockquote><h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">​</a></h2><blockquote><p>略微区别于开发单页面应用程序的点</p></blockquote><h4 id="_1-不同环境打包的问题" tabindex="-1">1.不同环境打包的问题 <a class="header-anchor" href="#_1-不同环境打包的问题" aria-label="Permalink to &quot;1.不同环境打包的问题&quot;">​</a></h4><ul><li>正常的环境配置是 <code>不会生效</code> 的需要做特殊处理</li><li>github actions的运行环境默认是 Linux</li><li>这里用 <code>github actions</code> 打包举例</li></ul><p>问题描述：本地使用 <code>pnpm run build:github</code> 打包没问题，但是配置了自动化命令的时候就不行了</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>添加项目依赖 <code>cross-env</code>，解决跨平台环境之间的差异而导致的问题</li><li>修改 <code>docs/.vitepress/config.mts</code> 文件下的 <code>base</code> 属性 <blockquote><p><code>deploy.yml</code> 这是一个github pages的自动化打包配置文件，存放于 <code>.github/workflows/</code> 目录下</p></blockquote></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 环境变量的控制来源子deploy.yml文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BUILD_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;github&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/blog/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/&quot;</span></span></code></pre></div></div><p>我们可以添加一条命令 <code>build:github</code> 本地看github打包效果</p><blockquote><p>验证过后可以删除这个 <code>build:github</code> 的命令</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;scripts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;dev&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress dev docs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;build&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress build docs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;build:github&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cross-env BUILD_ENV=github vitepress build docs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &quot;preview&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress preview docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,27),o=[a];function d(r,h,n,c,p,u){return i(),t("div",null,o)}const g=e(l,[["render",d]]);export{b as __pageData,g as default};
