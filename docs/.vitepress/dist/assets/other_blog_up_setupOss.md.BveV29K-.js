import{_ as a,H as e,G as s,al as i}from"./chunks/framework.MbiYLvr2.js";const x=JSON.parse('{"title":"nginx搭建对象存储OSS","description":"在云服务器借助nginx搭建对象存储OSS，使用nginx做图片服务器","frontmatter":{"title":"nginx搭建对象存储OSS","description":"在云服务器借助nginx搭建对象存储OSS，使用nginx做图片服务器","outline":[2,4]},"headers":[],"relativePath":"other/blog/up/setupOss.md","filePath":"other/blog/up/setupOss.md","lastUpdated":1719244880000}'),n={name:"other/blog/up/setupOss.md"},o=i(`<h1 id="搭建个人的对象存储oss" tabindex="-1">搭建个人的对象存储OSS <a class="header-anchor" href="#搭建个人的对象存储oss" aria-label="Permalink to &quot;搭建个人的对象存储OSS&quot;">​</a></h1><h2 id="什么是对象存储oss" tabindex="-1">什么是对象存储OSS <a class="header-anchor" href="#什么是对象存储oss" aria-label="Permalink to &quot;什么是对象存储OSS&quot;">​</a></h2><p>对象存储 OSS (Object Storage Service) 是一种云存储服务，它提供了一种存储海量数据的安全、可靠、经济高效的方式。简单来说，它就像一个巨大的在线仓库，你可以用来存储各种类型的数字文件。</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><ul><li>图片：产品照片、用户头像、视频截图等</li><li>视频：电影、电视剧、短视频等</li><li>音频：音乐、播客、语音文件等</li><li>文档：合同、账单、用户手册等</li><li>代码：源代码、配置文件等</li><li>备份数据：数据库备份、系统日志等</li></ul><h4 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h4><ul><li>使用简单</li><li>例如小程序项目图片必须使用oss存储</li><li>大部分厂商提供的oss上传免费，存储空间不限大小，但是<code>下行流量收费</code><ul><li>下行流量：访问这个图片的流量</li><li>一张图片大小 <code>100kb</code>，那么访问一次这个图片就是 <code>100kb</code> 下行流量</li></ul></li></ul><h2 id="windows系统搭建oss" tabindex="-1">windows系统搭建oss <a class="header-anchor" href="#windows系统搭建oss" aria-label="Permalink to &quot;windows系统搭建oss&quot;">​</a></h2><blockquote><p>这里我们可以借助 <code>nginx</code> 做代理</p></blockquote><h4 id="修改nginx配置文件" tabindex="-1">修改nginx配置文件 <a class="header-anchor" href="#修改nginx配置文件" aria-label="Permalink to &quot;修改nginx配置文件&quot;">​</a></h4><blockquote><p>访问链接 <code>/image</code> 的资源访问都被转接到 <code>alias 配置的文件地址目录下</code></p></blockquote><div class="info custom-block"><p class="custom-block-title"><code>conf/nginx.conf</code> 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location /image {</span></span>
<span class="line"><span>    alias C:/Users/picture/; # 使用 alias 而不是 root</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>    root html;</span></span>
<span class="line"><span>    index index.html index.htm;</span></span>
<span class="line"><span>}</span></span></code></pre></div></div><p>修改nginx配置文件，生效需要执行 <code>nginx -s reload</code></p><h4 id="如何看效果" tabindex="-1">如何看效果 <a class="header-anchor" href="#如何看效果" aria-label="Permalink to &quot;如何看效果&quot;">​</a></h4><ul><li>在本地 <code>C:/Users/picture/</code> 文件夹下放入一张图片001.png</li><li>执行 <code>nginx -s reload</code></li><li>验证 &gt; 浏览器访问 <code>C:/Users/picture/001.png</code> 是否可以看到图片</li><li>验证 &gt; <code>localhost/image/001.jpg</code> 可以访问就是转接成功</li><li>在自己的私人电脑通过浏览器访问图片，进行验证 &gt; <a href="http://xn--ip-xz4cq45o/image/001.jpg" target="_blank" rel="noreferrer">http://公网ip/image/001.jpg</a></li></ul><p>如果可以通过公网ip可以访到图片，那么就可以了，后续域名绑定ip之后，我们就可以通过域名 <code>http://www.jwblog.cn/image/001.jpg</code> 进行访问</p><h4 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><ul><li>这里配置图片的转接地址是用 <code>alias</code> 而不是 <code>root</code></li><li>修改了nginx配置文件或者添加的新的图片，必须执行 <code>nginx -s reload</code></li></ul><h2 id="linux系统搭建oss" tabindex="-1">linux系统搭建oss <a class="header-anchor" href="#linux系统搭建oss" aria-label="Permalink to &quot;linux系统搭建oss&quot;">​</a></h2>`,19),l=[o];function t(c,d,r,p,h,u){return s(),e("div",null,l)}const b=a(n,[["render",t]]);export{x as __pageData,b as default};
