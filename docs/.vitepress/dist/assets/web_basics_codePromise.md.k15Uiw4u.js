import{a as l}from"./chunks/theme.C1mTzYq5.js";import{d as E,f as b,H as r,U as a,k as v,N as o,al as c,a0 as g,G as y,K as d,L as F,V as u,W as B,_ as C}from"./chunks/framework.Dt0boiFn.js";const n=s=>(u("data-v-613db448"),s=s(),B(),s),m=n(()=>a("h1",{id:"promise理解",tabindex:"-1"},[d("Promise理解 "),a("a",{class:"header-anchor",href:"#promise理解","aria-label":'Permalink to "Promise理解"'},"​")],-1)),f=n(()=>a("h2",{id:"示例",tabindex:"-1"},[d("示例 "),a("a",{class:"header-anchor",href:"#示例","aria-label":'Permalink to "示例"'},"​")],-1)),D={class:"info custom-block"},_=n(()=>a("p",{class:"custom-block-title"},"模拟请求：",-1)),A=c(`<h2 id="代码" tabindex="-1" data-v-613db448>代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;" data-v-613db448>​</a></h2><div class="info custom-block" data-v-613db448><p class="custom-block-title" data-v-613db448>一、三种状态</p><div class="language- vp-adaptive-theme" data-v-613db448><button title="Copy Code" class="copy" data-v-613db448></button><span class="lang" data-v-613db448></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-613db448><code data-v-613db448><span class="line" data-v-613db448><span data-v-613db448>等待中（pending）：初始状态，既没有被兑现，也没有被拒绝   常见于（网络请求，网速慢的情况下）。</span></span>
<span class="line" data-v-613db448><span data-v-613db448>已兑现（fulfilled）：意味着操作成功完成   常见于（网络请求成功的情况下）。</span></span>
<span class="line" data-v-613db448><span data-v-613db448>已拒绝（rejected）：意味着操作失败   常见于（网络请求失败的情况下）</span></span></code></pre></div></div><div class="info custom-block" data-v-613db448><p class="custom-block-title" data-v-613db448>二、链式调用</p><div class="language-js vp-adaptive-theme" data-v-613db448><button title="Copy Code" class="copy" data-v-613db448></button><span class="lang" data-v-613db448>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-613db448><code data-v-613db448><span class="line" data-v-613db448><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    （常见于）接口返回code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>200也只有接口返回状态是200才会进入.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448></span>
<span class="line" data-v-613db448><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    （常见于）接口返回code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>200.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448></span>
<span class="line" data-v-613db448><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>finally</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    （现在比较流行做节流处理）接口返回失败和成功都会进入.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>finally</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span></code></pre></div></div><details class="details custom-block" data-v-613db448><summary data-v-613db448>源代码</summary><div class="language-js vp-adaptive-theme" data-v-613db448><button title="Copy Code" class="copy" data-v-613db448></button><span class="lang" data-v-613db448>js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-613db448><code data-v-613db448><span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>接口请求示范</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>a-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-613db448>&quot;primary&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> :loading=&quot;disabled&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> @click=&quot;newButton&quot;&gt;{{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448> disabled</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-613db448> &#39;等待请求中...&#39;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-613db448> &#39;模拟请求&#39;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> }}&lt;/a-button&gt;</span></span>
<span class="line" data-v-613db448></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>function</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> newButton()</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;" data-v-613db448>    // 开启阀门，只有按钮事件执行完毕才会继续执行</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    disabled.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448> true</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>    getDataQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>()</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-613db448>res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>            ElMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>)</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        })</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>            ElMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-613db448>&#39;接口请求失败&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>)</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        })</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>finally</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>            disabled.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448> false</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        })</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>}</span></span>
<span class="line" data-v-613db448></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>function</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;" data-v-613db448> getDataQuery()</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    return </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-613db448>resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;" data-v-613db448>reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>        setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-613db448>=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448> {</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-613db448>            resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-613db448>&#39;接口请求成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>)</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>        }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-613db448>2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>)</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>    })</span></span>
<span class="line" data-v-613db448><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-613db448>}</span></span></code></pre></div></details>`,4),j=JSON.parse('{"title":"Promise理解","description":"Promise理解","frontmatter":{"title":"Promise理解","description":"Promise理解"},"headers":[],"relativePath":"web/basics/codePromise.md","filePath":"web/basics/codePromise.md","lastUpdated":1715271843000}'),P={name:"web/basics/codePromise.md"},x=E({...P,setup(s){const i=b(!1);function h(){i.value=!0,k().then(t=>{l.success(t)}).catch(()=>{l.error("接口请求失败")}).finally(()=>{i.value=!1})}function k(){return new Promise((t,e)=>{setTimeout(()=>{t("接口请求成功")},2e3)})}return(t,e)=>{const p=g("a-button");return y(),r("div",null,[m,f,a("div",D,[_,v(p,{type:"primary",loading:i.value,onClick:h},{default:o(()=>[d(F(i.value?"等待请求中...":"模拟请求"),1)]),_:1},8,["loading"])]),A])}}}),N=C(x,[["__scopeId","data-v-613db448"]]);export{j as __pageData,N as default};
