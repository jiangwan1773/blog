import{_ as s,H as c,k as t,am as b,a1 as n,G as p}from"./chunks/framework.CIXq18Py.js";const u=JSON.parse('{"title":"前端加密安全","description":"怎么做前端加密安全","frontmatter":{"title":"前端加密安全","description":"怎么做前端加密安全"},"headers":[],"relativePath":"web/basics/codeSafety.md","filePath":"web/basics/codeSafety.md"}'),e={name:"web/basics/codeSafety.md"},d=b(`<blockquote data-v-45b03b5c><p data-v-45b03b5c>核心使用了前端js库CryptoJS</p></blockquote><h2 id="流程" tabindex="-1" data-v-45b03b5c>流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;" data-v-45b03b5c>​</a></h2><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>一、前端加密场景有哪些？</p><div class="language- vp-adaptive-theme" data-v-45b03b5c><button title="Copy Code" class="copy" data-v-45b03b5c></button><span class="lang" data-v-45b03b5c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-45b03b5c><code data-v-45b03b5c><span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.请求接口</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.路由跳转携带参数</span></span></code></pre></div></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>二、常用加密方式</p><div class="language- vp-adaptive-theme" data-v-45b03b5c><button title="Copy Code" class="copy" data-v-45b03b5c></button><span class="lang" data-v-45b03b5c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-45b03b5c><code data-v-45b03b5c><span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.base64</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.Sha256</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>3.AES</span></span></code></pre></div></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>三、Base64使用场景</p><p data-v-45b03b5c>浏览器url地址栏 <img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare001.png" class="show-img" data-v-45b03b5c></p><p data-v-45b03b5c>区别&amp;缺陷 <img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare002.png" class="show-img" data-v-45b03b5c></p><div class="language- vp-adaptive-theme" data-v-45b03b5c><button title="Copy Code" class="copy" data-v-45b03b5c></button><span class="lang" data-v-45b03b5c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-45b03b5c><code data-v-45b03b5c><span class="line" data-v-45b03b5c><span data-v-45b03b5c>Base64优缺点(Base64本质是一种编码方式，而非加密方式)</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>优点</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.使用简单，javascript语言支持</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.对称性加密（加密之后可以解密）</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>缺点</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.加解密会改变基础类型（Number 变成String），仅支持ASCII</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.编码后的大小会比原文件大小大1/3</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>3.加密单一，内容相同的密文加密解密对一样的</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>4.会造成文件体积增加，影响文件的加载速度</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>5.兼容性的问题，ie8以前的浏览器不支持</span></span></code></pre></div></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>四、Sha256简介</p><div class="language- vp-adaptive-theme" data-v-45b03b5c><button title="Copy Code" class="copy" data-v-45b03b5c></button><span class="lang" data-v-45b03b5c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-45b03b5c><code data-v-45b03b5c><span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.比较流行，也是最强的加密函数之一</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.非对称性加密（加密之后，无法通过密文解密）</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>3.应用场景：比特币等加密货币</span></span></code></pre></div><p data-v-45b03b5c>加密、解密过程演示 <img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare003.png" class="show-img" data-v-45b03b5c></p></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>五、AES简介</p><p data-v-45b03b5c>加密、解密过程演示 <img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare004.png" class="show-img" data-v-45b03b5c></p><div class="language- vp-adaptive-theme" data-v-45b03b5c><button title="Copy Code" class="copy" data-v-45b03b5c></button><span class="lang" data-v-45b03b5c></span><pre class="shiki shiki-themes github-light github-dark vp-code" data-v-45b03b5c><code data-v-45b03b5c><span class="line" data-v-45b03b5c><span data-v-45b03b5c>前端加密步骤</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>1.获取当前时间戳</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>2.拼接密钥字符串（eg：token + 时间戳）</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>3.哈希算法对拼接后的字符串进行哈希</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>借助sha256生成非对称性加密</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>生成结果64位</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>4.取哈希结果前32位生成完整的密钥（utf8格式）</span></span>
<span class="line" data-v-45b03b5c><span data-v-45b03b5c>5.使用前端js库CryptoJS生成密文</span></span></code></pre></div></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>六、如何加密</p><img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare006.png" class="show-img" data-v-45b03b5c></div><div class="info custom-block" data-v-45b03b5c><p class="custom-block-title" data-v-45b03b5c>七、如何解密</p><img src="http://www.jwblog.cn/images/pc/code/share/encryptionShare007.png" class="show-img" data-v-45b03b5c></div>`,9);function i(l,v,o,h,r,g){const a=n("c-title");return p(),c("div",null,[t(a,{title:"前端加密安全"}),d])}const k=s(e,[["render",i],["__scopeId","data-v-45b03b5c"]]);export{u as __pageData,k as default};
